stages:
  - test-unit
  - test-e2e
  - build
  - deploy

variables:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "true"
  DOTNET_CLI_TELEMETRY_OPTOUT: "true"

unit_test_project:
  tags:
    - sopro
  stage: test-unit
  image: mcr.microsoft.com/dotnet/sdk:6.0
  script:
    - echo "Unit test job."
    - cd ./Projekt/SoPro24Team06.XUnit
    - dotnet restore
    - dotnet test --logger "trx;LogFileName=test_results.trx"

e2e_test_project:
  tags:
    - sopro
  stage: test-e2e
  image: mcr.microsoft.com/dotnet/sdk:6.0
  script:
    - echo "E2E test job."
    - sh ./e2e-install-dep.sh
    - cd ./Projekt/SoPro24Team06.E2E
    - dotnet restore
    - dotnet test --logger "trx;LogFileName=test_results.trx"

build_project:
  tags:
    - sopro
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:6.0
  script:
    - echo "Build project job."
    - cd ./Projekt/SoPro24Team06
    - dotnet restore
    - dotnet build -c Release

deploy_project:
  tags:
    - sopro
  stage: deploy
  only:
    - main
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    KANIKO_ARGS: "--single-snapshot"
    KANIKO_BUILD_CONTEXT: $CI_PROJECT_DIR/Projekt/SoPro24Team06
    IMAGE_TAG_NAME: latest
  script:
    - export IMAGE_TAG=${CI_REGISTRY_IMAGE}/project:${IMAGE_TAG_NAME}
    - echo $IMAGE_TAG
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - DOCKERFILE_PATH=${DOCKERFILE_PATH:-"$KANIKO_BUILD_CONTEXT/Dockerfile"}
    - /kaniko/executor --context $KANIKO_BUILD_CONTEXT --dockerfile $DOCKERFILE_PATH --destination $IMAGE_TAG $KANIKO_ARGS
