// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoPro24Team06.Data;

#nullable disable

namespace SoPro24Team06.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("AssignmentForContracts", b =>
                {
                    b.Property<int>("AssignmentsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ForContractsListId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AssignmentsId", "ForContractsListId");

                    b.HasIndex("ForContractsListId");

                    b.ToTable("AssignmentForContracts");
                });

            modelBuilder.Entity("AssignmentForDepartments", b =>
                {
                    b.Property<int>("AssignmentsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ForDepartmentsListId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AssignmentsId", "ForDepartmentsListId");

                    b.HasIndex("ForDepartmentsListId");

                    b.ToTable("AssignmentForDepartments");
                });

            modelBuilder.Entity("AssignmentTemplateForContracts", b =>
                {
                    b.Property<int>("AssignmentsTemplatesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ForContractsListId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AssignmentsTemplatesId", "ForContractsListId");

                    b.HasIndex("ForContractsListId");

                    b.ToTable("AssignmentTemplateForContracts");
                });

            modelBuilder.Entity("AssignmentTemplateForDepartments", b =>
                {
                    b.Property<int>("AssignmentsTemplatesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ForDepartmentsListId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AssignmentsTemplatesId", "ForDepartmentsListId");

                    b.HasIndex("ForDepartmentsListId");

                    b.ToTable("AssignmentTemplateForDepartments");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProcessTemplateRolesWithAccess", b =>
                {
                    b.Property<int>("ProcessTemplatesId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RolesWithAccessId")
                        .HasColumnType("TEXT");

                    b.HasKey("ProcessTemplatesId", "RolesWithAccessId");

                    b.HasIndex("RolesWithAccessId");

                    b.ToTable("ProcessTemplateRolesWithAccess");
                });

            modelBuilder.Entity("SoPro24Team06.Models.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("SoPro24Team06.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("SoPro24Team06.Models.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssignedRoleId")
                        .HasColumnType("TEXT");

                    b.Property<string>("AssigneeId")
                        .HasColumnType("TEXT");

                    b.Property<int>("AssigneeType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Instructions")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProcessId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignedRoleId");

                    b.HasIndex("AssigneeId");

                    b.HasIndex("ProcessId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("SoPro24Team06.Models.AssignmentTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssignedRoleId")
                        .HasColumnType("TEXT");

                    b.Property<int>("AssigneeType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DueInId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Instructions")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProcessTemplateId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignedRoleId");

                    b.HasIndex("DueInId");

                    b.HasIndex("ProcessTemplateId");

                    b.ToTable("AssignmentTemplates");
                });

            modelBuilder.Entity("SoPro24Team06.Models.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("SoPro24Team06.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("SoPro24Team06.Models.DueTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Days")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Months")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Weeks")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("DueTimes");
                });

            modelBuilder.Entity("SoPro24Team06.Models.Process", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContractOfRefWorkerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartmentOfRefWorkerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SupervisorId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkerOfReferenceId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContractOfRefWorkerId");

                    b.HasIndex("DepartmentOfRefWorkerId");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("WorkerOfReferenceId");

                    b.ToTable("Processes");
                });

            modelBuilder.Entity("SoPro24Team06.Models.ProcessTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContractOfRefWorkerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartmentOfRefWorkerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContractOfRefWorkerId");

                    b.HasIndex("DepartmentOfRefWorkerId");

                    b.ToTable("ProcessTemplates");
                });

            modelBuilder.Entity("AssignmentForContracts", b =>
                {
                    b.HasOne("SoPro24Team06.Models.Assignment", null)
                        .WithMany()
                        .HasForeignKey("AssignmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoPro24Team06.Models.Contract", null)
                        .WithMany()
                        .HasForeignKey("ForContractsListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssignmentForDepartments", b =>
                {
                    b.HasOne("SoPro24Team06.Models.Assignment", null)
                        .WithMany()
                        .HasForeignKey("AssignmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoPro24Team06.Models.Department", null)
                        .WithMany()
                        .HasForeignKey("ForDepartmentsListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssignmentTemplateForContracts", b =>
                {
                    b.HasOne("SoPro24Team06.Models.AssignmentTemplate", null)
                        .WithMany()
                        .HasForeignKey("AssignmentsTemplatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoPro24Team06.Models.Contract", null)
                        .WithMany()
                        .HasForeignKey("ForContractsListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssignmentTemplateForDepartments", b =>
                {
                    b.HasOne("SoPro24Team06.Models.AssignmentTemplate", null)
                        .WithMany()
                        .HasForeignKey("AssignmentsTemplatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoPro24Team06.Models.Department", null)
                        .WithMany()
                        .HasForeignKey("ForDepartmentsListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("SoPro24Team06.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SoPro24Team06.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SoPro24Team06.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("SoPro24Team06.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoPro24Team06.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SoPro24Team06.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProcessTemplateRolesWithAccess", b =>
                {
                    b.HasOne("SoPro24Team06.Models.ProcessTemplate", null)
                        .WithMany()
                        .HasForeignKey("ProcessTemplatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoPro24Team06.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RolesWithAccessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SoPro24Team06.Models.Assignment", b =>
                {
                    b.HasOne("SoPro24Team06.Models.ApplicationRole", "AssignedRole")
                        .WithMany()
                        .HasForeignKey("AssignedRoleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SoPro24Team06.Models.ApplicationUser", "Assignee")
                        .WithMany()
                        .HasForeignKey("AssigneeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SoPro24Team06.Models.Process", null)
                        .WithMany("Assignments")
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("AssignedRole");

                    b.Navigation("Assignee");
                });

            modelBuilder.Entity("SoPro24Team06.Models.AssignmentTemplate", b =>
                {
                    b.HasOne("SoPro24Team06.Models.ApplicationRole", "AssignedRole")
                        .WithMany()
                        .HasForeignKey("AssignedRoleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SoPro24Team06.Models.DueTime", "DueIn")
                        .WithMany()
                        .HasForeignKey("DueInId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SoPro24Team06.Models.ProcessTemplate", null)
                        .WithMany("AssignmentTemplates")
                        .HasForeignKey("ProcessTemplateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("AssignedRole");

                    b.Navigation("DueIn");
                });

            modelBuilder.Entity("SoPro24Team06.Models.Process", b =>
                {
                    b.HasOne("SoPro24Team06.Models.Contract", "ContractOfRefWorker")
                        .WithMany()
                        .HasForeignKey("ContractOfRefWorkerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SoPro24Team06.Models.Department", "DepartmentOfRefWorker")
                        .WithMany()
                        .HasForeignKey("DepartmentOfRefWorkerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SoPro24Team06.Models.ApplicationUser", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SoPro24Team06.Models.ApplicationUser", "WorkerOfReference")
                        .WithMany()
                        .HasForeignKey("WorkerOfReferenceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ContractOfRefWorker");

                    b.Navigation("DepartmentOfRefWorker");

                    b.Navigation("Supervisor");

                    b.Navigation("WorkerOfReference");
                });

            modelBuilder.Entity("SoPro24Team06.Models.ProcessTemplate", b =>
                {
                    b.HasOne("SoPro24Team06.Models.Contract", "ContractOfRefWorker")
                        .WithMany()
                        .HasForeignKey("ContractOfRefWorkerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SoPro24Team06.Models.Department", "DepartmentOfRefWorker")
                        .WithMany()
                        .HasForeignKey("DepartmentOfRefWorkerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ContractOfRefWorker");

                    b.Navigation("DepartmentOfRefWorker");
                });

            modelBuilder.Entity("SoPro24Team06.Models.Process", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("SoPro24Team06.Models.ProcessTemplate", b =>
                {
                    b.Navigation("AssignmentTemplates");
                });
#pragma warning restore 612, 618
        }
    }
}
