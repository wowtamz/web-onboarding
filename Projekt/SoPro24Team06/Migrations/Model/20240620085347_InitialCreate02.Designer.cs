// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoPro24Team06.Data;

#nullable disable

namespace SoPro24Team06.Migrations.Model
{
    [DbContext(typeof(ModelContext))]
    [Migration("20240620085347_InitialCreate02")]
    partial class InitialCreate02
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssignmentTemplateId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProcessTemplateId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("AssignmentTemplateId");

                    b.HasIndex("ProcessTemplateId");

                    b.ToTable("IdentityRole");
                });

            modelBuilder.Entity("SoPro24Team06.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("SoPro24Team06.Models.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssigneeType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Instructions")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProcessId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProcessId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("SoPro24Team06.Models.AssignmentTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssigneeType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DueInId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Instructions")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProcessTemplateId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DueInId");

                    b.HasIndex("ProcessTemplateId");

                    b.ToTable("AssignmentTemplates");
                });

            modelBuilder.Entity("SoPro24Team06.Models.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssignmentTemplateId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("AssignmentTemplateId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("SoPro24Team06.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssignmentTemplateId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("AssignmentTemplateId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("SoPro24Team06.Models.DueTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Days")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Months")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Weeks")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("DueTimes");
                });

            modelBuilder.Entity("SoPro24Team06.Models.Process", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContractOfRefWorkerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartmentOfRefWorkerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DueDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SupervisorId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkerOfReferenceId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContractOfRefWorkerId");

                    b.HasIndex("DepartmentOfRefWorkerId");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("WorkerOfReferenceId");

                    b.ToTable("Processes");
                });

            modelBuilder.Entity("SoPro24Team06.Models.ProcessTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContractOfRefWorkerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartmentOfRefWorkerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContractOfRefWorkerId");

                    b.HasIndex("DepartmentOfRefWorkerId");

                    b.ToTable("ProcessTemplates");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.HasOne("SoPro24Team06.Models.Assignment", null)
                        .WithMany("AssignedRolesList")
                        .HasForeignKey("AssignmentId");

                    b.HasOne("SoPro24Team06.Models.AssignmentTemplate", null)
                        .WithMany("AssignedRolesList")
                        .HasForeignKey("AssignmentTemplateId");

                    b.HasOne("SoPro24Team06.Models.ProcessTemplate", null)
                        .WithMany("RolesWithAccess")
                        .HasForeignKey("ProcessTemplateId");
                });

            modelBuilder.Entity("SoPro24Team06.Models.Assignment", b =>
                {
                    b.HasOne("SoPro24Team06.Models.Process", null)
                        .WithMany("Assignments")
                        .HasForeignKey("ProcessId");
                });

            modelBuilder.Entity("SoPro24Team06.Models.AssignmentTemplate", b =>
                {
                    b.HasOne("SoPro24Team06.Models.DueTime", "DueIn")
                        .WithMany()
                        .HasForeignKey("DueInId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoPro24Team06.Models.ProcessTemplate", null)
                        .WithMany("AssignmentTemplates")
                        .HasForeignKey("ProcessTemplateId");

                    b.Navigation("DueIn");
                });

            modelBuilder.Entity("SoPro24Team06.Models.Contract", b =>
                {
                    b.HasOne("SoPro24Team06.Models.Assignment", null)
                        .WithMany("ForContractsList")
                        .HasForeignKey("AssignmentId");

                    b.HasOne("SoPro24Team06.Models.AssignmentTemplate", null)
                        .WithMany("ForContractsList")
                        .HasForeignKey("AssignmentTemplateId");
                });

            modelBuilder.Entity("SoPro24Team06.Models.Department", b =>
                {
                    b.HasOne("SoPro24Team06.Models.Assignment", null)
                        .WithMany("ForDepartmentsList")
                        .HasForeignKey("AssignmentId");

                    b.HasOne("SoPro24Team06.Models.AssignmentTemplate", null)
                        .WithMany("ForDepartmentsList")
                        .HasForeignKey("AssignmentTemplateId");
                });

            modelBuilder.Entity("SoPro24Team06.Models.Process", b =>
                {
                    b.HasOne("SoPro24Team06.Models.Contract", "ContractOfRefWorker")
                        .WithMany()
                        .HasForeignKey("ContractOfRefWorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoPro24Team06.Models.Department", "DepartmentOfRefWorker")
                        .WithMany()
                        .HasForeignKey("DepartmentOfRefWorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoPro24Team06.Models.ApplicationUser", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoPro24Team06.Models.ApplicationUser", "WorkerOfReference")
                        .WithMany()
                        .HasForeignKey("WorkerOfReferenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContractOfRefWorker");

                    b.Navigation("DepartmentOfRefWorker");

                    b.Navigation("Supervisor");

                    b.Navigation("WorkerOfReference");
                });

            modelBuilder.Entity("SoPro24Team06.Models.ProcessTemplate", b =>
                {
                    b.HasOne("SoPro24Team06.Models.Contract", "ContractOfRefWorker")
                        .WithMany()
                        .HasForeignKey("ContractOfRefWorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoPro24Team06.Models.Department", "DepartmentOfRefWorker")
                        .WithMany()
                        .HasForeignKey("DepartmentOfRefWorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContractOfRefWorker");

                    b.Navigation("DepartmentOfRefWorker");
                });

            modelBuilder.Entity("SoPro24Team06.Models.Assignment", b =>
                {
                    b.Navigation("AssignedRolesList");

                    b.Navigation("ForContractsList");

                    b.Navigation("ForDepartmentsList");
                });

            modelBuilder.Entity("SoPro24Team06.Models.AssignmentTemplate", b =>
                {
                    b.Navigation("AssignedRolesList");

                    b.Navigation("ForContractsList");

                    b.Navigation("ForDepartmentsList");
                });

            modelBuilder.Entity("SoPro24Team06.Models.Process", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("SoPro24Team06.Models.ProcessTemplate", b =>
                {
                    b.Navigation("AssignmentTemplates");

                    b.Navigation("RolesWithAccess");
                });
#pragma warning restore 612, 618
        }
    }
}
