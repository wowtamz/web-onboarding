@model SoPro24Team06.ViewModels.AssignmentDetailsViewModel

<form id="Details" method="post" asp-action="UpdateDetails">
	@Html.AntiForgeryToken()
	<fieldset>
		<legend>Title</legend>
		<p>@Model.Assignment.Title</p>
	</fieldset>
	<fieldset>
		@if (Model.Process != null)
		{
			<legend>Vorgang</legend>
			<p>@Model.Process.Title</p>
		}
	</fieldset>
	<fieldset style="margin-top: 8px">
		<legend>Anweisungen</legend>
		<textarea class="form-control" rows="10" readonly>@Model.Assignment.Instructions</textarea>
	</fieldset>
	@if (Model.Assignment.AssigneeType == SoPro24Team06.Enums.AssigneeType.ROLES)
	{
		<fieldset style="margin-top: 4px">
			<legend>Zugewiesene Rolle</legend>
			<p>@Model.Assignment.AssignedRole</p>
		</fieldset>
	}
	<fieldset style="margin-top: 4px">
		<legend>Aufgabenverantwortlichkeit</legend>
		<select id="assignmentTypeDropdown" asp-for="Assignment.AssigneeType" class="btn btn-primary dropdown-toggle"
			aria-expanded="false" data-bs-toggle="dropdown" type="button" style="margin-bottom: 12px;">
			@if (Model.Assignment.AssigneeType == SoPro24Team06.Enums.AssigneeType.ROLES)
			{
				<option value="@SoPro24Team06.Enums.AssigneeType.ROLES" selected>Rolle</option>
				<option value="@SoPro24Team06.Enums.AssigneeType.USER">Nutzer</option>
			}
			else
			{
				<option value="@SoPro24Team06.Enums.AssigneeType.ROLES">Rolle</option>
				<option value="@SoPro24Team06.Enums.AssigneeType.USER" selected>Nutzer</option>
			}
		</select>
		<div id="assignedRoleGroup" style="display:none;">
			<select id="assignedRoleDropdown" class="btn btn-primary dropdown-toggle" aria-expanded="false"
				data-bs-toggle="dropdown" type="button" style="margin-bottom: 12px;" asp-for="Assignment.AssignedRole"
				asp-items="@Model.RoleList">
				<option value=null>Bitte Auswählen</option>
			</select>
		</div>
		<div id="assigneeGroup" style="display:none;">
			<select id="assignedUserDropdown" class="btn btn-primary dropdown-toggle" aria-expanded="false"
				data-bs-toggle="dropdown" type="button" style="margin-bottom: 12px;" asp-for="Assignment.Assignee"
				asp-items="@Model.UserList">
				<option value=null>Bitte Auswählen</option>
			</select>
		</div>
	</fieldset>
	<fieldset style="margin-top: 4px">
		<legend>Status</legend>
		<select id="assignmentStatusDrowpdown" class="btn btn-primary dropdown-toggle" aria-expanded="false"
			data-bs-toggle="dropdown" type="button" style="margin-bottom: 12px;" asp-for="Assignment.Status"
			asp-items="@Model.AssignmentStatusList">
		</select>
	</fieldset>
	<div style="margin-top: 12px">
		<button type="submit" class="btn btn-primary">Bestätigen</button>
		<button type="button" class="btn btn-secondary" onclick="history.back()">Schließen ohne Speicher</button>
	</div>
</form>

<script>
	function updateDropdownVisibility() {
		var assignedRoleGroup = document.getElementById('assignedRoleGroup');
		var assigneeGroup = document.getElementById('assigneeGroup');
		var assignmentType = document.getElementById('assignmentTypeDropdown').value;

		console.log("Assignment Type Changed: " + assignmentType); // Debugging

		if (assignmentType == '@SoPro24Team06.Enums.AssigneeType.ROLES') {
			assignedRoleGroup.style.display = 'block';
			assigneeGroup.style.display = 'none';
		} else if (assignmentType == '@SoPro24Team06.Enums.AssigneeType.USER') {
			assignedRoleGroup.style.display = 'none';
			assigneeGroup.style.display = 'block';
		} else {
			assignedRoleGroup.style.display = 'none';
			assigneeGroup.style.display = 'none';
		}
	}
	document.getElementById('assignmentTypeDropdown').addEventListener('change', updateDropdownVisibility);
	document.addEventListener('DOMContentLoaded', updateDropdownVisibility);

	function validateForm() {
		let isValid = true;
		const assignmentType = document.getElementById('assignmentTypeDropdown').value;
		if (!assignmentType) {
			alert('Bitte wählen Sie eine Aufgabenverantwortlichkeit aus.');
			isValid = false;
		}
		if (assignmentType === '@SoPro24Team06.Enums.AssigneeType.ROLES') {
			const assignedRole = document.getElementById('assignedRoleDropdown').value;
			if (!assignedRole) {
				alert('Bitte wählen Sie eine Rolle aus');
				isValid = false;
			}
		} else if (assignmentType === '@SoPro24Team06.Enums.AssigneeType.USER') {
			const assignedUser = document.getElementById('assignedUserDropdown').value;
			if (!assignedUser) {
				alert('Bitte wählen Sie einen Nutzer aus.');
				isValid = false;
			}
		}
		return isValid;
	}
</script>